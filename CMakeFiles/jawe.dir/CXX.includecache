#IncludeRegexLine: ^[ 	]*[#%][ 	]*(include|import)[ 	]*[<"]([^">]+)([">])

#IncludeRegexScan: ^.*$

#IncludeRegexComplain: ^$

#IncludeRegexTransform: 

/home/branislava/Programming/jawe/lang.lex.cpp
stdio.h
-
string.h
-
errno.h
-
stdlib.h
-
inttypes.h
-
iostream
-
string
-
cstdlib
-
memory
-
utility
-
map
-
utils/reader.hpp
-
syntax.hpp
-
lang.syn.hpp
-
unistd.h
-

/home/branislava/Programming/jawe/src/main.cpp
utils/control.hpp
-
command.hpp
-

/home/branislava/Programming/jawe/src/operations/empty_remover.cpp
operations/empty_remover.hpp
-
syntax.hpp
-

/home/branislava/Programming/jawe/src/operations/file_checker.cpp
operations/file_checker.hpp
-
utils/control.hpp
-
iostream
-
fstream
-
string
-
cstdlib
-

/home/branislava/Programming/jawe/src/operations/fn_decompose.cpp
operations/fn_decompose.hpp
-
syntax.hpp
-
lang.syn.hpp
-

/home/branislava/Programming/jawe/src/operations/parser.cpp
operations/parser.hpp
-
syntax.hpp
-
lang.syn.hpp
-

/home/branislava/Programming/jawe/src/operations/printer.cpp
operations/printer.hpp
-
utils/control.hpp
-
iostream
-
command.hpp
-

/home/branislava/Programming/jawe/src/syntax/abstract/expr_node.cpp
expr_node.hpp
-
map
-
string
-

/home/branislava/Programming/jawe/src/syntax/abstract/shared_node.cpp
shared_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/control_flow/break_node.cpp
control_flow/break_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/control_flow/case_node.cpp
control_flow/case_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/control_flow/command_block_node.cpp
control_flow/command_block_node.hpp
-
algorithm
-

/home/branislava/Programming/jawe/src/syntax/control_flow/continue_node.cpp
control_flow/continue_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/control_flow/default_node.cpp
control_flow/default_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/control_flow/do_while_node.cpp
control_flow/do_while_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/control_flow/empty_node.cpp
control_flow/empty_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/control_flow/for_node.cpp
control_flow/for_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/control_flow/if_else_node.cpp
control_flow/if_else_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/control_flow/return_node.cpp
control_flow/return_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/control_flow/switch_node.cpp
control_flow/switch_node.hpp
-
algorithm
-

/home/branislava/Programming/jawe/src/syntax/control_flow/while_node.cpp
control_flow/while_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/literals/abstract_object_node.cpp
literals/abstract_object_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/literals/array_node.cpp
literals/array_node.hpp
-
algorithm
-

/home/branislava/Programming/jawe/src/syntax/literals/false_node.cpp
literals/false_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/literals/function_object_node.cpp
literals/function_object_node.hpp
-
algorithm
-

/home/branislava/Programming/jawe/src/syntax/literals/literal_node.cpp
literals/literal_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/literals/logical_literal_node.cpp
literals/logical_literal_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/literals/nan_node.cpp
literals/nan_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/literals/null_node.cpp
literals/null_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/literals/numeric_node.cpp
literals/numeric_node.hpp
-
string
-

/home/branislava/Programming/jawe/src/syntax/literals/object_node.cpp
literals/object_node.hpp
-
shared_node.hpp
-
algorithm
-
utility
-

/home/branislava/Programming/jawe/src/syntax/literals/primitive_node.cpp
literals/primitive_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/literals/string_node.cpp
literals/string_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/literals/true_node.cpp
literals/true_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/literals/undefined_node.cpp
literals/undefined_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/array_access_node.cpp
operators/array_access_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/assign_bit_con_node.cpp
operators/assign_bit_con_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/assign_bit_dis_node.cpp
operators/assign_bit_dis_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/assign_bit_xor_node.cpp
operators/assign_bit_xor_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/assign_div_node.cpp
operators/assign_div_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/assign_minus_node.cpp
operators/assign_minus_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/assign_mod_node.cpp
operators/assign_mod_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/assign_mul_node.cpp
operators/assign_mul_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/assign_node.cpp
operators/assign_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/assign_plus_node.cpp
operators/assign_plus_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/assign_pow_node.cpp
operators/assign_pow_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/assign_shift_l_node.cpp
operators/assign_shift_l_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/assign_shift_r_node.cpp
operators/assign_shift_r_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/assign_shift_u_node.cpp
operators/assign_shift_u_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/binary_operator_node.cpp
operators/binary_operator_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/bit_and_node.cpp
operators/bit_and_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/bit_not_node.cpp
operators/bit_not_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/bit_or_node.cpp
operators/bit_or_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/bit_shift_l_node.cpp
operators/bit_shift_l_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/bit_shift_r_node.cpp
operators/bit_shift_r_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/bit_shift_u_node.cpp
operators/bit_shift_u_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/bit_xor_node.cpp
operators/bit_xor_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/decrement_node.cpp
operators/decrement_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/delete_node.cpp
operators/delete_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/divide_node.cpp
operators/divide_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/dot_access_node.cpp
operators/dot_access_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/equals_node.cpp
operators/equals_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/function_call_node.cpp
operators/function_call_node.hpp
-
algorithm
-

/home/branislava/Programming/jawe/src/syntax/operators/greater_or_equals_node.cpp
operators/greater_or_equals_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/greater_then_node.cpp
operators/greater_then_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/in_node.cpp
operators/in_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/increment_node.cpp
operators/increment_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/instance_of_node.cpp
operators/instance_of_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/less_or_equals_node.cpp
operators/less_or_equals_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/less_then_node.cpp
operators/less_then_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/logic_and_node.cpp
operators/logic_and_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/logic_not_node.cpp
operators/logic_not_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/logic_or_node.cpp
operators/logic_or_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/minus_node.cpp
operators/minus_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/mod_node.cpp
operators/mod_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/new_node.cpp
operators/new_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/not_equals_node.cpp
operators/not_equals_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/operator_node.cpp
operators/operator_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/plus_node.cpp
operators/plus_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/post_decrement_node.cpp
operators/post_decrement_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/post_increment_node.cpp
operators/post_increment_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/power_node.cpp
operators/power_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/ternary_conditional_node.cpp
operators/ternary_conditional_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/ternary_operator_node.cpp
operators/ternary_operator_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/times_node.cpp
operators/times_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/typed_equals_node.cpp
operators/typed_equals_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/typed_not_equals_node.cpp
operators/typed_not_equals_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/typeof_node.cpp
operators/typeof_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/uminus_node.cpp
operators/uminus_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/unary_operator_node.cpp
operators/unary_operator_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/uplus_node.cpp
operators/uplus_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/operators/void_node.cpp
operators/void_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/variables/const_declaration_node.cpp
variables/const_declaration_node.hpp
-
string
-

/home/branislava/Programming/jawe/src/syntax/variables/declaration_node.cpp
variables/declaration_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/variables/function_declaration_node.cpp
variables/function_declaration_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/variables/let_declaration_node.cpp
variables/let_declaration_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/variables/var_declaration_node.cpp
variables/var_declaration_node.hpp
-

/home/branislava/Programming/jawe/src/syntax/variables/variable_node.cpp
variables/variable_node.hpp
-

/home/branislava/Programming/jawe/src/transformations/hoister.cpp
transformations/hoister.hpp
-
syntax.hpp
-
algorithm
-

/home/branislava/Programming/jawe/src/utils/control.cpp
iostream
-
fstream
-
string
-
config.h
-
utils/control.hpp
-
operations/operations.hpp
-
cstdlib
-
boost/program_options/options_description.hpp
-
boost/program_options/parsers.hpp
-
boost/program_options/variables_map.hpp
-
boost/tokenizer.hpp
-
boost/token_functions.hpp
-

/home/branislava/Programming/jawe/src/utils/error.cpp
iostream
-
cstdlib
-
utils/error.hpp
-
utils/control.hpp
-
utils/reader.hpp
-

/home/branislava/Programming/jawe/src/utils/leak_checker.cpp
utils/leak_checker.hpp
-
iostream
-
syntax.hpp
-

/home/branislava/Programming/jawe/src/utils/reader.cpp
utils/reader.hpp
-
utils/control.hpp
-

config.h

include/operations/basic_operation.hpp

include/operations/empty_remover.hpp
operations/basic_operation.hpp
-
syntax.hpp
-

include/operations/file_checker.hpp
operations/basic_operation.hpp
-

include/operations/fn_decompose.hpp
operations/basic_operation.hpp
-
syntax.hpp
-

include/operations/operations.hpp
string
-
operations/file_checker.hpp
-
operations/parser.hpp
-
operations/printer.hpp
-
operations/fn_decompose.hpp
-
operations/empty_remover.hpp
-
operations/phaser.hpp
-
operations/optimizer.hpp
-

include/operations/optimizer.hpp
operations/basic_operation.hpp
-
tuple
-
syntax.hpp
-
transformations/hoister.hpp
-

include/operations/parser.hpp
operations/basic_operation.hpp
-

include/operations/phaser.hpp
tuple
-

include/operations/printer.hpp
operations/basic_operation.hpp
-

include/syntax/abstract/expr_node.hpp
shared_node.hpp
-

include/syntax/abstract/shared_node.hpp
string
-
vector
-
variant
-
iostream
-
memory
-

include/syntax/control_flow/break_node.hpp
shared_node.hpp
-

include/syntax/control_flow/case_node.hpp
shared_node.hpp
-
literals/primitive_node.hpp
-

include/syntax/control_flow/command_block_node.hpp
shared_node.hpp
-
vector
-

include/syntax/control_flow/continue_node.hpp
shared_node.hpp
-

include/syntax/control_flow/default_node.hpp
shared_node.hpp
-

include/syntax/control_flow/do_while_node.hpp
shared_node.hpp
-

include/syntax/control_flow/empty_node.hpp
shared_node.hpp
-

include/syntax/control_flow/for_node.hpp
shared_node.hpp
-

include/syntax/control_flow/if_else_node.hpp
shared_node.hpp
-

include/syntax/control_flow/return_node.hpp
shared_node.hpp
-
expr_node.hpp
-

include/syntax/control_flow/switch_node.hpp
shared_node.hpp
-
vector
-

include/syntax/control_flow/while_node.hpp
shared_node.hpp
-

include/syntax/literals/abstract_object_node.hpp
literals/literal_node.hpp
-
string
-

include/syntax/literals/array_node.hpp
literals/abstract_object_node.hpp
-
vector
-
shared_node.hpp
-

include/syntax/literals/false_node.hpp
literals/logical_literal_node.hpp
-

include/syntax/literals/function_object_node.hpp
literals/abstract_object_node.hpp
-
shared_node.hpp
-
vector
-
string
-

include/syntax/literals/literal_node.hpp
expr_node.hpp
-
string
-

include/syntax/literals/logical_literal_node.hpp
literals/primitive_node.hpp
-
string
-

include/syntax/literals/nan_node.hpp
literals/primitive_node.hpp
-

include/syntax/literals/null_node.hpp
literals/primitive_node.hpp
-

include/syntax/literals/numeric_node.hpp
literals/primitive_node.hpp
-

include/syntax/literals/object_node.hpp
map
-
utility
-
string
-
literals/abstract_object_node.hpp
-
shared_node.hpp
-

include/syntax/literals/primitive_node.hpp
literals/literal_node.hpp
-
string
-

include/syntax/literals/string_node.hpp
string
-
literals/primitive_node.hpp
-

include/syntax/literals/true_node.hpp
literals/logical_literal_node.hpp
-

include/syntax/literals/undefined_node.hpp
literals/primitive_node.hpp
-

include/syntax/operators/array_access_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/assign_bit_con_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/assign_bit_dis_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/assign_bit_xor_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/assign_div_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/assign_minus_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/assign_mod_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/assign_mul_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/assign_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/assign_plus_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/assign_pow_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/assign_shift_l_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/assign_shift_r_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/assign_shift_u_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/binary_operator_node.hpp
string
-
iostream
-
shared_node.hpp
-
operators/operator_node.hpp
-

include/syntax/operators/bit_and_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/bit_not_node.hpp
operators/unary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/bit_or_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/bit_shift_l_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/bit_shift_r_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/bit_shift_u_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/bit_xor_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/decrement_node.hpp
operators/unary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/delete_node.hpp
operators/unary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/divide_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/dot_access_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/equals_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/function_call_node.hpp
shared_node.hpp
-
expr_node.hpp
-
vector
-

include/syntax/operators/greater_or_equals_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/greater_then_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/in_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/increment_node.hpp
operators/unary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/instance_of_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/less_or_equals_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/less_then_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/logic_and_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/logic_not_node.hpp
operators/unary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/logic_or_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/minus_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/mod_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/new_node.hpp
operators/unary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/not_equals_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/operator_node.hpp
expr_node.hpp
-

include/syntax/operators/plus_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/post_decrement_node.hpp
operators/unary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/post_increment_node.hpp
operators/unary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/power_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/ternary_conditional_node.hpp
operators/ternary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/ternary_operator_node.hpp
operators/operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/times_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/typed_equals_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/typed_not_equals_node.hpp
operators/binary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/typeof_node.hpp
operators/unary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/uminus_node.hpp
operators/unary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/unary_operator_node.hpp
operators/operator_node.hpp
-
shared_node.hpp
-
iostream
-

include/syntax/operators/uplus_node.hpp
operators/unary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/operators/void_node.hpp
operators/unary_operator_node.hpp
-
shared_node.hpp
-

include/syntax/syntax.hpp
let_declaration_node.hpp
-
const_declaration_node.hpp
-
var_declaration_node.hpp
-
variable_node.hpp
-
function_declaration_node.hpp
-
function_object_node.hpp
-
array_node.hpp
-
false_node.hpp
-
nan_node.hpp
-
numeric_node.hpp
-
object_node.hpp
-
string_node.hpp
-
true_node.hpp
-
undefined_node.hpp
-
null_node.hpp
-
break_node.hpp
-
case_node.hpp
-
continue_node.hpp
-
default_node.hpp
-
do_while_node.hpp
-
empty_node.hpp
-
command_block_node.hpp
-
for_node.hpp
-
if_else_node.hpp
-
return_node.hpp
-
switch_node.hpp
-
while_node.hpp
-
array_access_node.hpp
-
assign_bit_con_node.hpp
-
assign_bit_dis_node.hpp
-
assign_bit_xor_node.hpp
-
assign_div_node.hpp
-
assign_minus_node.hpp
-
assign_mod_node.hpp
-
assign_mul_node.hpp
-
assign_node.hpp
-
assign_plus_node.hpp
-
assign_pow_node.hpp
-
assign_shift_l_node.hpp
-
assign_shift_r_node.hpp
-
assign_shift_u_node.hpp
-
bit_and_node.hpp
-
bit_not_node.hpp
-
bit_or_node.hpp
-
bit_shift_l_node.hpp
-
bit_shift_r_node.hpp
-
bit_shift_u_node.hpp
-
bit_xor_node.hpp
-
decrement_node.hpp
-
delete_node.hpp
-
divide_node.hpp
-
dot_access_node.hpp
-
equals_node.hpp
-
function_call_node.hpp
-
greater_or_equals_node.hpp
-
greater_then_node.hpp
-
increment_node.hpp
-
in_node.hpp
-
instance_of_node.hpp
-
less_or_equals_node.hpp
-
less_then_node.hpp
-
logic_and_node.hpp
-
logic_not_node.hpp
-
logic_or_node.hpp
-
minus_node.hpp
-
mod_node.hpp
-
new_node.hpp
-
not_equals_node.hpp
-
plus_node.hpp
-
post_decrement_node.hpp
-
post_increment_node.hpp
-
power_node.hpp
-
ternary_conditional_node.hpp
-
times_node.hpp
-
typed_equals_node.hpp
-
typed_not_equals_node.hpp
-
typeof_node.hpp
-
uminus_node.hpp
-
uplus_node.hpp
-
void_node.hpp
-

include/syntax/variables/const_declaration_node.hpp
variables/declaration_node.hpp
-

include/syntax/variables/declaration_node.hpp
shared_node.hpp
-

include/syntax/variables/function_declaration_node.hpp
shared_node.hpp
-
literals/function_object_node.hpp
-
string
-

include/syntax/variables/let_declaration_node.hpp
variables/declaration_node.hpp
-

include/syntax/variables/var_declaration_node.hpp
variables/declaration_node.hpp
-

include/syntax/variables/variable_node.hpp
string
-
expr_node.hpp
-

include/transformations/basic_transformation.hpp

include/transformations/hoister.hpp
transformations/basic_transformation.hpp
-
syntax.hpp
-

include/utils/control.hpp
string
-
boost/program_options/options_description.hpp
-
boost/program_options/variables_map.hpp
-

include/utils/error.hpp
string
-

include/utils/leak_checker.hpp
iostream
-
vector
-
algorithm
-

include/utils/reader.hpp
fstream
-
iostream
-
string
-
vector
-

lang.syn.hpp

